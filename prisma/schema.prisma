generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  name               String?
  password           String
  company            String?
  phone              String?
  address            String?
  city               String?
  country            String?
  emailVerified      Boolean   @default(false)
  emailVerifyToken   String?
  emailVerifyExpires DateTime?
  role               String    @default("customer")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  cellPhone          String?
  homePhone          String?
  workPhone          String?
  officeAddress      String?
  state              String?
  postalCode         String?
  primaryPhone       String?
  homeAddress        String?

  @@map("app_users")
}

model Service {
  id          String   @id @default(uuid())
  slug        String   @unique
  name        String
  description String?
  features    Json?
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("services")
}

model ContentSection {
  id        String   @id @default(uuid())
  type      String   @unique
  name      String
  title     String
  content   String
  subtext   String?  @db.Text
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("content_sections")
}

model SeoSettings {
  id            String   @id @default(uuid())
  title         String
  description   String
  keywords      String
  ogTitle       String
  ogDescription String
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("seo_settings")
}

model MediaFile {
  id         String   @id @default(uuid())
  name       String
  type       String
  url        String
  size       BigInt
  mimeType   String?
  width      Int?
  height     Int?
  alt        String?
  uploadedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("media_files")
}

model TruckRegistration {
  id                    String    @id @default(uuid())
  ownerName             String
  email                 String
  phone                 String
  address               String
  city                  String?
  state                 String?
  zipCode               String?
  companyName           String
  businessType          String
  taxId                 String?
  yearsInBusiness       String
  truckMake             String
  truckModel            String
  truckYear             Int
  plateNumber           String    @unique
  vinNumber             String?
  truckType             String
  capacity              String?
  insuranceProvider     String
  insuranceExpiry       DateTime
  licenseExpiry         DateTime
  serviceAreas          String[]
  willingToRelocate     Boolean   @default(false)
  experience            String
  specializations       String[]
  additionalNotes       String?
  status                String    @default("pending")
  reviewedBy            String?
  reviewedAt            DateTime?
  reviewNotes           String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  accountName           String
  accountNumber         String
  agreedToPrivacy       Boolean   @default(false)
  agreedToTerms         Boolean   @default(false)
  areYouOwner           Boolean   @default(true)
  bankName              String
  connectionToTrucks    String?
  hackneyPermit         String
  nationalIdCard        String
  nextOfKinAddress      String
  nextOfKinName         String
  nextOfKinPhone        String
  nextOfKinRelationship String
  officeGarageAddress   String
  positionInCompany     String
  proofOfOwnership      String
  roadWorthiness        String
  utilityBill           String
  vehicleLicense        String

  @@index([email])
  @@index([plateNumber])
  @@index([status])
  @@map("truck_registrations")
}

model PartnerRegistration {
  id                     String   @id @default(uuid())
  companyName            String
  ownerName              String
  email                  String   @unique
  phoneNumber            String
  homeAddress            String
  officeWarehouseAddress String
  bankName               String
  accountNumber          String
  accountName            String
  nextOfKinName          String
  nextOfKinRelationship  String
  nextOfKinAddress       String
  nextOfKinPhone         String
  nationalIdCard         String
  utilityBill            String
  cacRegistration        String
  otherDocuments         String?
  agreedToTerms          Boolean  @default(false)
  agreedToPrivacy        Boolean  @default(false)
  status                 String   @default("pending")
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@map("partner_registrations")
}

model TruckRequest {
  id                  String   @id @default(uuid())
  companyName         String
  contactName         String
  email               String
  phoneNumber         String
  pickupAddress       String
  pickupCity          String?
  pickupDate          DateTime
  deliveryAddress     String
  deliveryCity        String?
  deliveryDate        DateTime
  cargoType           String
  cargoWeight         String
  cargoValue          String
  specialInstructions String?
  serviceType         String   @default("standard")
  urgency             String   @default("normal")
  status              String   @default("pending")
  quote               Decimal? @db.Decimal(10, 2)
  assignedDriver      String?
  trackingNumber      String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@index([trackingNumber])
  @@map("truck_requests")
}

model QuoteRequest {
  id                 String    @id @default(uuid())
  name               String
  email              String
  phone              String?
  company            String?
  serviceId          String
  serviceName        String
  projectDescription String
  timeline           String?
  budget             String?
  status             String    @default("pending")
  adminResponse      String?
  quotedAmount       Decimal?  @db.Decimal(10, 2)
  quotedCurrency     String    @default("USD")
  respondedBy        String?
  respondedAt        DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  userId             String?

  @@index([email])
  @@index([userId])
  @@index([serviceId])
  @@index([status])
  @@index([createdAt])
  @@map("quote_requests")
}

model Notification {
  id             String    @id @default(uuid())
  recipientEmail String
  recipientName  String?
  type           String
  title          String
  message        String
  relatedId      String?
  relatedType    String?
  status         String    @default("unread")
  emailSent      Boolean   @default(false)
  emailSentAt    DateTime?
  data           Json?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  readAt         DateTime?

  @@index([recipientEmail])
  @@index([type])
  @@index([status])
  @@index([createdAt])
  @@map("notifications")
}

model Message {
  id           String   @id @default(uuid())
  senderId     String
  senderName   String
  senderEmail  String
  senderRole   String   @default("customer")
  receiverId   String
  receiverName String
  receiverEmail String
  receiverRole String   @default("customer")
  subject      String
  content      String   @db.Text
  threadId     String?
  parentId     String?
  status       String   @default("unread")
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  readAt       DateTime?
  attachments  Json?

  @@index([senderId])
  @@index([receiverId])
  @@index([threadId])
  @@index([parentId])
  @@index([status])
  @@index([createdAt])
  @@map("messages")
}

model Invoice {
  id              String   @id @default(uuid())
  invoiceNumber   String   @unique
  customerId      String
  customerName    String
  customerEmail   String
  customerPhone   String?
  customerAddress String?
  serviceId       String?
  serviceName     String
  description     String   @db.Text
  amount          Decimal  @db.Decimal(10,2)
  tax             Decimal  @db.Decimal(10,2) @default(0)
  total           Decimal  @db.Decimal(10,2)
  currency        String   @default("NGN")
  status          String   @default("pending") // pending, paid, overdue, cancelled
  dueDate         DateTime
  paidAt          DateTime?
  paymentMethod   String?
  paymentRef      String?
  notes           String?
  items           Json?    // Array of invoice line items
  createdBy       String   // Admin who generated the invoice
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([customerId])
  @@index([customerEmail])
  @@index([invoiceNumber])
  @@index([status])
  @@index([createdAt])
  @@map("invoices")
}

model PageVisit {
  id            String   @id @default(uuid())
  sessionId     String
  userId        String?
  page          String
  pathname      String
  referrer      String?
  userAgent     String?
  ip            String?
  country       String?
  city          String?
  device        String?
  browser       String?
  os            String?
  duration      Int?     // Time spent on page in seconds
  createdAt     DateTime @default(now())
  
  @@index([sessionId])
  @@index([userId])
  @@index([page])
  @@index([pathname])
  @@index([createdAt])
  @@map("page_visits")
}
